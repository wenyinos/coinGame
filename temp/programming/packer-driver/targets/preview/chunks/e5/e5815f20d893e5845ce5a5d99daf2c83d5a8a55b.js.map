{"version":3,"sources":["file:///D:/MyCoding/Cosos/coinGame/assets/scripts/view/KeyBindingView.ts"],"names":["_decorator","Color","Component","director","Label","Node","Sprite","ccclass","property","selected","unSelected","KeyBindingView","key","onEnable","bg","node","on","EventType","TOUCH_END","onSelect","clearKeyName","onDisable","off","v","keyName","bindingName","nameLabel","string","keyLabel","color","emit","select"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;;;;;;;;OACxD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;AAExBS,MAAAA,Q,GAAW,IAAIR,KAAJ,CAAU,GAAV,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,C;AACXS,MAAAA,U,GAAa,IAAIT,KAAJ,CAAU,GAAV,EAAc,GAAd,EAAkB,GAAlB,EAAsB,GAAtB,C;;gCAGNU,c,WADZJ,OAAO,CAAC,gBAAD,C,UAGHC,QAAQ,CAACF,MAAD,C,UAERE,QAAQ,CAACJ,KAAD,C,UAERI,QAAQ,CAACJ,KAAD,C,2BAPb,MACaO,cADb,SACoCT,SADpC,CAC8C;AAAA;AAAA;AAAA,eAC1CU,GAD0C,GACpC,EADoC;;AAAA;;AAAA;;AAAA;AAAA;;AAS1CC,QAAAA,QAAQ,GAAS;AACb,eAAKC,EAAL,CAAQC,IAAR,CAAaC,EAAb,CAAgBX,IAAI,CAACY,SAAL,CAAeC,SAA/B,EAAyC,KAAKC,QAA9C,EAAuD,IAAvD;AACAhB,UAAAA,QAAQ,CAACa,EAAT,CAAY,cAAZ,EAA2B,KAAKI,YAAhC,EAA6C,IAA7C;AACH;;AACDC,QAAAA,SAAS,GAAS;AACd,eAAKP,EAAL,CAAQC,IAAR,CAAaO,GAAb,CAAiBjB,IAAI,CAACY,SAAL,CAAeC,SAAhC,EAA0C,KAAKC,QAA/C,EAAwD,IAAxD;AACAhB,UAAAA,QAAQ,CAACmB,GAAT,CAAa,cAAb,EAA4B,KAAKF,YAAjC,EAA8C,IAA9C;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACIA,QAAAA,YAAY,CAACG,CAAD,EAAU;AAClB,cAAG,KAAKX,GAAL,IAAWW,CAAd,EAAgB;AACZ,iBAAKC,OAAL,GAAe,EAAf;AACH;AACJ;;AAEc,YAAXC,WAAW,CAACF,CAAD,EAAU;AACrB,cAAG,KACEG,SADL,EACe;AACX,iBAAKA,SAAL,CAAeC,MAAf,GAAwBJ,CAAxB;AACA,iBAAKX,GAAL,GAAWW,CAAX;AACH;AACJ;;AACU,YAAPC,OAAO,CAACD,CAAD,EAAU;AACjB,cAAG,KAAKK,QAAR,EAAiB;AACb,iBAAKA,QAAL,CAAcD,MAAd,GAAuBJ,CAAvB;AACH;AACJ;;AACDJ,QAAAA,QAAQ,GAAE;AACN,eAAKU,KAAL,GAAa,IAAb;AACA1B,UAAAA,QAAQ,CAAC2B,IAAT,CAAc,kBAAd,EAAiC,IAAjC;AACH;;AAEQ,YAALD,KAAK,CAACE,MAAD,EAAiB;AACtB,eAAKjB,EAAL,CAAQe,KAAR,GAAgBE,MAAM,GAACtB,QAAD,GAAUC,UAAhC;AACH;;AAhDyC,O;;;;;iBAG9B,I;;;;;;;iBAEM,I;;;;;;;iBAED,I","sourcesContent":["import { _decorator, Color, Component, director, Label, Node, Sprite } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst selected = new Color(100,100,100,200);\r\nconst unSelected = new Color(100,100,100,100);\r\n\r\n@ccclass('KeyBindingView')\r\nexport class KeyBindingView extends Component {\r\n    key = \"\";\r\n    @property(Sprite)\r\n    bg:Sprite = null;\r\n    @property(Label)\r\n    nameLabel:Label = null;\r\n    @property(Label)\r\n    keyLabel:Label = null;\r\n\r\n    onEnable(): void {\r\n        this.bg.node.on(Node.EventType.TOUCH_END,this.onSelect,this); \r\n        director.on(\"duplicateKey\",this.clearKeyName,this);\r\n    }\r\n    onDisable(): void {\r\n        this.bg.node.off(Node.EventType.TOUCH_END,this.onSelect,this); \r\n        director.off(\"duplicateKey\",this.clearKeyName,this);\r\n    }\r\n\r\n    /**\r\n     * @en : clear key if values are the same\r\n     * @cn : 清楚相同的按键信息\r\n     * @param {string} v\r\n     */\r\n    clearKeyName(v:string){\r\n        if(this.key ==v){\r\n            this.keyName = \"\";\r\n        }\r\n    }\r\n\r\n    set bindingName(v:string){\r\n        if(this\r\n            .nameLabel){\r\n            this.nameLabel.string = v;\r\n            this.key = v;\r\n        }\r\n    }\r\n    set keyName(v:string){\r\n        if(this.keyLabel){\r\n            this.keyLabel.string = v;\r\n        }\r\n    }\r\n    onSelect(){\r\n        this.color = true;\r\n        director.emit(\"KeyBindingSelect\",this);\r\n    }\r\n\r\n    set color(select:boolean) {\r\n        this.bg.color = select?selected:unSelected;\r\n    }\r\n\r\n   \r\n}\r\n\r\n"]}