{"version":3,"sources":["file:///D:/MyCoding/Cosos/coinGame/assets/scripts/combat/ctrl/PlayerCtrl.ts"],"names":["_decorator","Component","Vec3","lerp","SkeletalAnimation","Quat","Node","director","aa","CameraCtrl","events","quatFromAngleY","ccclass","property","ctrl","position","h","v","vector","tempV3_0","tempQ_0","_h","_v","speed","rad","Math","PI","PlayerCtrl","camera","_current","_speedV","_speedH","onEnable","ball","scale","ZERO","mic","cameras","getComponent","on","playerAnm","play","onDisable","off","anm","time","isPlaying","ONE","scheduleOnce","crossFade","wave","t","global","isPause","update","dt","copy","node","dirV","dirH","move","isMove","speedMag","mag","eulerY","atan2","_targetRotation","y","targetRad","sin","cos","rotateTowards","rotation"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Vec3, lerp, SkeletalAnimation, Quat, Node, director } from 'cc';\r\nimport { aa } from '../../frame/FrameCore';\r\nimport CameraCtrl from './CameraCtrl';\r\nimport { events } from '../../frame/Enums';\r\nimport { quatFromAngleY } from '../../frame/CommonUtils';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst ctrl = aa.ctrl;\r\n\r\nconst position  /* as temp gridPos */ = { h: 0, v: 0 };\r\nconst vector  /* as temp gridPos */ = { h: 0, v: 0 };\r\nconst tempV3_0: Vec3 /* as temp Vec3 */ = new Vec3();\r\nconst tempQ_0: Quat /* as temp Quat */ = new Quat();\r\nlet _h = \"x\";\r\nlet _v = \"z\";\r\n\r\nconst speed = 4;\r\nconst rad = 180 / Math.PI;\r\n\r\n@ccclass('PlayerControler')\r\nexport class PlayerCtrl extends Component {\r\n    @property(SkeletalAnimation) anm: SkeletalAnimation;\r\n    @property\r\n    public speed = 1;\r\n\r\n    @property(Node)\r\n    public ball: Node = null!;\r\n    @property(Node)\r\n    public mic: Node = null!;\r\n    camera: CameraCtrl;\r\n    private _current = \"\";\r\n    private _speedV = 0;\r\n    private _speedH = 0;\r\n\r\n    onEnable(): void {\r\n        this.ball.scale = Vec3.ZERO;\r\n        this.mic.scale = Vec3.ZERO;\r\n        this.camera = aa.cameras[0].getComponent(CameraCtrl);\r\n        director.on(events.playerAnm, this.play, this);\r\n    }\r\n    onDisable(): void {\r\n        director.off(events.playerAnm, this.play, this);\r\n    }\r\n    play(anm: string,time=0.3) {\r\n        if (anm == this._current || aa.ctrl.isPlaying) return;\r\n        if (anm == \"basketball\") {\r\n            this.ball.scale = Vec3.ONE;\r\n            this.scheduleOnce(()=>{\r\n                this.ball.scale = Vec3.ZERO;\r\n            },3)\r\n        }\r\n        if (anm == \"rap\") {\r\n            this.mic.scale = Vec3.ONE;\r\n            this.scheduleOnce(()=>{\r\n                this.mic.scale = Vec3.ZERO;\r\n            },4)\r\n        }\r\n        this._current = anm;\r\n        this.anm.crossFade(anm, time)\r\n    }\r\n    wave(t){\r\n        aa.global.isPause = true;\r\n        this.play(\"wave\",0.1);\r\n        this.scheduleOnce(()=>{\r\n            aa.global.isPause = false;\r\n        },t)\r\n    }\r\n\r\n    update(dt: number) {\r\n\r\n        if(aa.global.isPause) return;\r\n        Vec3.copy(tempV3_0, this.node.position);\r\n        position.h = tempV3_0[_h];\r\n        position.v = tempV3_0[_v];\r\n        let dirV = ctrl.v, dirH = ctrl.h, move = false;\r\n        aa.global.isMove = false;\r\n        if (dirV != 0 || dirH != 0) {\r\n            const speedMag = speed * dt * ctrl.mag;\r\n            const eulerY = -Math.atan2(dirV, dirH) * rad + this.camera._targetRotation.y;\r\n            const targetRad = eulerY / rad;\r\n            this._speedH = lerp(this._speedH, speedMag * Math.sin(targetRad), dt * 5);\r\n            this._speedV = lerp(this._speedV, speedMag * Math.cos(targetRad), dt * 5);\r\n            quatFromAngleY(tempQ_0, eulerY);\r\n            aa.global.isMove = move = true;\r\n            /* the maxStep should be angle instead of degree, already issued to engine team*/\r\n            Quat.rotateTowards(tempQ_0, this.node.rotation, tempQ_0, dt * 360 * 1.8);\r\n            position.h += this._speedH, position.v += this._speedV;\r\n            tempV3_0[_h] = position.h, tempV3_0[_v] = position.v;\r\n            this.node.rotation = tempQ_0;\r\n            this.play(\"walk\");\r\n        } else {\r\n            this._speedH = this._speedV = 0;\r\n            this.play(\"idle\");\r\n        }\r\n        if (move && !aa.ctrl.isPlaying) {\r\n            tempV3_0[_h] = position.h, tempV3_0[_v] = position.v;\r\n            this.node.position = tempV3_0;\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}