{"version":3,"sources":["file:///D:/MyCoding/Cosos/coinGame/assets/scripts/frame/Enums.ts"],"names":["AudioClip","CCString","JsonAsset","Material","Prefab","SpriteAtlas","SpriteFrame","_decorator","ccclass","property","adConfig","type","shareContent","shareConfig","collisions","DEFAULT","player","trap","water","brick","enemy","ui","JoystickView","name","layer","clear","ActionView","ConfigView","CoinView","CoinBarView","ToastView","itemState","DataType","events","changeCharacter","shakeCam","playerAnm","initLevel","gameWin","startDraw","finishDraw","showResult","buildMap","paperOcacity","editMap","playMap","rollBg","changeTop","catWatch","Toast","Anm","anms","cry","idle","hurt","happy","StorageKeys","CharacterData","Key","MapData","CurrentPen","Sound","Bgm","Pens","Pause","Timer","Level","Frost","Undo","Energy","Star","Props","Scenes","Layers","Comps","ShareConfig","Setting","View","AdConfig","Ad","Clips","bgm","photo","counter","btn","touch","gold","reward","merge","win","lose","AssetType","path","Sprite","UiPrefab","Json","Atlas"],"mappings":"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","sourcesContent":["\r\nimport { AudioClip, CCString, JsonAsset, Material, Prefab, SpriteAtlas, SpriteFrame, _decorator, __private } from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('adConfig')\r\nexport class adConfig {\r\n    @property\r\n    platform = \"platform\";\r\n    @property\r\n    id = 0\r\n    @property({ type: CCString })\r\n    bannerId: string[] = [];\r\n    @property({ type: CCString })\r\n    intersitialId: string[] = [];\r\n    @property({ type: CCString })\r\n    videoId: string[] = [];\r\n    @property({ type: CCString })\r\n    customId: string[] = [];\r\n}\r\n@ccclass('shareContent')\r\nexport class shareContent {\r\n    @property\r\n    shareId: string = \"\";\r\n    @property\r\n    shareLink: string = \"\";\r\n    @property\r\n    shareText: string = \"share tittle\";\r\n}\r\n\r\n\r\n@ccclass('shareConfig')\r\nexport class shareConfig {\r\n    @property\r\n    platform = \"platform\";\r\n    @property({ type: shareContent })\r\n    sharePics: shareContent[] = [];\r\n}\r\nexport const collisions = {\r\n    DEFAULT: 1,\r\n    player: 2,\r\n    trap: 4,\r\n    water: 8,\r\n    brick: 16,\r\n    enemy: 32,\r\n}\r\nexport interface uiInterface {\r\n    name:string,\r\n    layer:number,\r\n    clear:boolean\r\n\r\n}\r\n/* for ui prefabs config */\r\nexport const ui= {\r\n    JoystickView: { name: 'JoystickView', layer: 1, clear: false },\r\n    ActionView: { name: 'ActionView', layer: 2, clear: false },\r\n    ConfigView: { name: 'ConfigView', layer: 3, clear: false },\r\n    CoinView: { name: 'CoinView', layer: 4, clear: false },\r\n    CoinBarView: { name: 'CoinBarView', layer: 5, clear: false },\r\n\r\n    ToastView: { name: 'ToastView', layer: 6, clear: false },\r\n}\r\n\r\nexport enum itemState {\r\n    OWNEQUIPED,\r\n    EQUIPED,\r\n    NEWEQUIP,\r\n    UNEQUIPED\r\n}\r\nexport enum DataType {\r\n    STRING,\r\n    NUMBER,\r\n    OBJECT\r\n}\r\n\r\nexport const events = {\r\n    changeCharacter:\"changeCharacter\",\r\n    shakeCam: \"shakeCam\",\r\n    playerAnm: \"playerAnm\",\r\n    initLevel: \"initLevel\",\r\n    gameWin: \"gameWin\",\r\n    startDraw: \"startDraw\",\r\n    finishDraw: \"finishDraw\",\r\n    showResult: \"showResult\",\r\n    buildMap: \"buildMap\",\r\n    paperOcacity: \"paperOcacity\",\r\n    editMap: \"editMap\",\r\n    playMap: \"playMap\",\r\n    rollBg: \"rollBg\",\r\n    changeTop: \"changeTop\",\r\n    catWatch: \"catWatch\",\r\n    Toast: \"toast\",\r\n    Anm: \"anm\",\r\n}\r\n\r\nexport const anms = {\r\n    cry: \"cry\",\r\n    idle: \"idle\",\r\n    hurt: \"hurt\",\r\n    happy: \"happy\",\r\n\r\n}\r\nexport const StorageKeys = {\r\n    CharacterData: \"CharacterData\",\r\n}\r\n\r\n/* keys for storage */\r\nexport const Key = {\r\n    MapData: \"MapData\",\r\n    CurrentPen: \"CurrentPen\",\r\n    Sound: \"Sound\",\r\n    Bgm: \"Bgm\",\r\n    Pens: \"Pens\",\r\n    Pause: \"Pause\",\r\n    Timer: \"Timer\",\r\n    Level: \"Level\",\r\n    Frost: \"Frost\",\r\n    Undo: \"Undo\",\r\n    Energy: \"Energy\",\r\n    Star: \"Star\",\r\n}\r\n\r\n\r\nexport const Props = {\r\n    Scenes: \"Scenes\",\r\n    Layers: \"Layers\",\r\n    Comps: \"Components\",\r\n    ShareConfig: \"ShareConfig\",\r\n    Setting: \"Setting\",\r\n    View: \"View\",\r\n    AdConfig: \"AdConfig\",\r\n    Ad: \"Advertisement\",\r\n}\r\n\r\nexport const Clips = {\r\n    hurt: \"hurt\",\r\n    happy: \"happy\",\r\n    bgm: \"bgm\",\r\n    photo: \"photo\",\r\n    counter: \"counter\",\r\n    btn: \"btn\",\r\n    touch: \"touch\",\r\n    gold: \"gold\",\r\n    reward: \"reward\",\r\n    merge: \"merge\",\r\n    win: \"win\",\r\n    lose: \"lose\",\r\n}\r\n\r\nexport type AssetType = {\r\n    type: any,\r\n    path: string\r\n}\r\n\r\n/**\r\n * assettypes and paths\r\n */\r\nexport const AssetType = ({\r\n    Prefab: { type: Prefab, path: \"Preload/Prefabs\" } as AssetType,\r\n    Sprite: { type: SpriteFrame, path: \"Preload/Sprite\" } as AssetType,\r\n    UiPrefab: { type: Prefab, path: \"Preload/UI\" } as AssetType,\r\n    Json: { type: JsonAsset, path: \"Preload/Jsons/\" } as AssetType,\r\n    Sound: { type: AudioClip, path: \"Preload/Clips/\" } as AssetType,\r\n    Atlas: { type: SpriteAtlas, path: \"Preload/Atlas/\" } as AssetType,\r\n    Material: { type: Material, path: \"Preload/Materials/\" } as AssetType\r\n\r\n})\r\n\r\n\r\n\r\n\r\n"]}